<?xml version="1.0"?>
<robot name="sensor_kinect" xmlns:xacro="http://ros.org/wiki/xacro">
	
  <xacro:property name="M_PI" value="3.1415926535897931" />
	

  <xacro:macro name="sensor_kinect" params="name parent *origin">
    
    <joint name="${name}_cam_joint" type="fixed">
	    <insert_block name="origin" />
	    <parent link="${parent}"/>
	    <child link="${name}_cam_link"/>
	  </joint>  
	  <link name="${name}_cam_link">
	    <visual>
	     <origin xyz="0 0 0" rpy="0 0 ${M_PI/2}"/>
	      <geometry>
	       <mesh filename="package://rb1_base_description/meshes/sensors/kinect.dae"/>
	      </geometry>
	    </visual>
		  <collision>
	      <origin xyz="0.0 0.0 0.0" rpy="0 0 0"/>
		    <geometry>
		      <box size="0.07271 0.27794 0.073"/>
		    </geometry>
		  </collision>
	    <inertial>
	      <mass value="0.001" />
	      <origin xyz="0 0 0" />
	      <inertia ixx="0.0001" ixy="0.0" ixz="0.0"
	               iyy="0.0001" iyz="0.0"
	               izz="0.0001" />
	    </inertial>
	  </link>
    
    <joint name="${name}_cam_rgb_joint" type="fixed">
      <origin xyz="0.031 -0.0125 0.016" rpy="0 0 0"/>
      <parent link="${name}_cam_link"/>
      <child link="${name}_cam_rgb_frame" />
    </joint>
    <link name="${name}_cam_rgb_frame">
      <inertial>
        <mass value="0.001" />
        <origin xyz="0 0 0" />
        <inertia ixx="0.0001" ixy="0.0" ixz="0.0"
                 iyy="0.0001" iyz="0.0"
                 izz="0.0001" />
      </inertial>
    </link>
    
    <joint name="${name}_cam_rgb_optical_joint" type="fixed">
      <origin xyz="0 0 0" rpy="${-M_PI/2} 0 ${-M_PI/2}" />
      <parent link="${name}_cam_rgb_frame" />
      <child link="${name}_cam_rgb_optical_frame" />
    </joint>
    <link name="${name}_cam_rgb_optical_frame">
      <inertial>
        <mass value="0.001" />
        <origin xyz="0 0 0" />
        <inertia ixx="0.0001" ixy="0.0" ixz="0.0"
                 iyy="0.0001" iyz="0.0"
                 izz="0.0001" />
      </inertial>
    </link>

		  
	  <!-- The fixed joints & links below are usually published by static_transformers launched by the OpenNi launch 
	       files. However, for Gazebo simulation we need them, so we add them here.
	       (Hence, don't publish them additionally!) -->
		<joint name="${name}_cam_depth_joint" type="fixed">
		  <origin xyz="0 0.025 0" rpy="0 0 0" />
		  <parent link="${name}_cam_rgb_frame" />
		  <child link="${name}_cam_depth_frame" />
		</joint>
		<link name="${name}_cam_depth_frame">
	    <inertial>
	      <mass value="0.001" />
	      <origin xyz="0 0 0" />
	      <inertia ixx="0.0001" ixy="0.0" ixz="0.0"
	               iyy="0.0001" iyz="0.0"
	               izz="0.0001" />
	    </inertial>
		</link>
		<joint name="${name}_cam_depth_optical_joint" type="fixed">
		  <origin xyz="0 0 0" rpy="${-M_PI/2} 0 ${-M_PI/2}" />
		  <parent link="${name}_cam_depth_frame" />
		  <child link="${name}_cam_depth_optical_frame" />
		</joint>
		<link name="${name}_cam_depth_optical_frame">
	    <inertial>
	      <mass value="0.001" />
	      <origin xyz="0 0 0" />
	      <inertia ixx="0.0001" ixy="0.0" ixz="0.0"
	               iyy="0.0001" iyz="0.0"
	               izz="0.0001" />
	    </inertial>
		</link>
	
		<!-- Kinect sensor for simulation -->
	  <sensor_kinect_gazebo/>
  
  </xacro:macro>


  <xacro:macro name="sensor_kinect_gazebo">
  
    <gazebo reference="${name}_cam_depth_frame">  
      <sensor type="depth" name="cam">
        <always_on>true</always_on>
        <update_rate>20.0</update_rate>
        <camera>
          <horizontal_fov>${60.0*M_PI/180.0}</horizontal_fov>
          <image>
            <format>R8G8B8</format>
            <width>640</width>
            <height>480</height>
          </image>
          <clip>
            <near>0.05</near>
            <far>8.0</far>
          </clip>
        </camera>
        <plugin name="kinect_cam_controller" filename="libgazebo_ros_openni_kinect.so">
          <cameraName>rb1/${name}</cameraName>
          <alwaysOn>true</alwaysOn>
          <updateRate>10</updateRate>
          <imageTopicName>rgb/image_raw</imageTopicName>
          <depthImageTopicName>depth/image_raw</depthImageTopicName>
          <pointCloudTopicName>depth/points</pointCloudTopicName>
          <cameraInfoTopicName>rgb/camera_info</cameraInfoTopicName>
          <depthImageCameraInfoTopicName>depth/camera_info</depthImageCameraInfoTopicName>
          <frameName>${name}_cam_depth_optical_frame</frameName>
          <baseline>0.1</baseline>
          <distortion_k1>0.0</distortion_k1>
          <distortion_k2>0.0</distortion_k2>
          <distortion_k3>0.0</distortion_k3>
          <distortion_t1>0.0</distortion_t1>
          <distortion_t2>0.0</distortion_t2>
          <pointCloudCutoff>0.4</pointCloudCutoff>
          <pointCloudCutoffMax>5.0</pointCloudCutoffMax>
        </plugin>
      </sensor>
    </gazebo>
  
  </xacro:macro>
  
</robot>
